# A demo configuration for a federated task.

[federated_tasks.entrypoint_name]
# This executor also should be defined in this file, so that both are imported into the config.
executor = headnode
# Relative to the entrypoint, the config directory provided to `subrun`
config_dir = remote_repo/.redun
# The python module to load the entrypoint. This must import the task identified below.
load_module = remote_repo.workflow

# The namespace of the entrypoint
namespace = remote_namespace
# The name of the entrypoint
task_name = published_task

# Not required but can provide useful information(like task arg typing) for tools triggering federated tasks.
task_signature = "published_task(x: int, y: int = 0) -> int" 

# Not required but can be useful for users looking to trigger a federated task.
description = "A description of the entrypoint. In this case, this entrypoint takes 2 numbers as input and sums them."

# This is helpful for a demo context because there isn't a shared execution database
new_execution = True

[executors.headnode]
# This executor will act as the head-node.
type = docker
image = federated_image_test
scratch = /tmp/redun
# Commonly, code packaging will be disabled for federated tasks, so that we only run code from the
# federated resources.
code_package = False
